import numpy as np

from tensorflow.keras.applications import resnet50
from tensorflow.keras.preprocessing.image import load_img
from tensorflow.keras.preprocessing.image import img_to_array
from tensorflow.keras.applications.resnet50 import decode_predictions

import matplotlib.pyplot as plt
import tensorflow as tf
import logging

tf.get_logger().setLevel(logging.ERROR)

#load image and convert to 4d tesor
image = load_img('../data/dog.jpg', target_size=(224,224))
image_np = img_to_array(image)
image_np = np.expand_dims(image_np, axis=0)

#load the pretrained model
model = resnet50.ResNet50(weights='imagenet')

# standardize input data
X = resnet50.preprocess_input(image_np.copy())

# predict
y = model.predict(X)
predicted_labels = decode_predictions(y)

print('predictions = ', predicted_labels)

#show image
plt.imshow(np.uint8(image_np[0]))
plt.show()
